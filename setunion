#include <iostream>

using namespace std;

void find_union(int arr1[], int size1, int arr2[], int size2) {
    int i = 0, j = 0;

    while (i < size1 && j < size2) {
        if (arr1[i] < arr2[j]) {
            cout << arr1[i++] << " ";
        } else if (arr1[i] > arr2[j]) {
            cout << arr2[j++] << " ";
        } else {
            cout << arr1[i++] << " ";
            j++;
        }
    }

    while (i < size1) {
        cout << arr1[i++] << " ";
    }

    while (j < size2) {
        cout << arr2[j++] << " ";
    }

    cout << endl;
}

void find_intersection(int arr1[], int size1, int arr2[], int size2) {
    int i = 0, j = 0;

    while (i < size1 && j < size2) {
        if (arr1[i] < arr2[j]) {
            i++;
        } else if (arr1[i] > arr2[j]) {
            j++;
        } else {
            cout << arr1[i++] << " ";
            j++;
        }
    }

    cout << endl;
}

void find_difference(int arr1[], int size1, int arr2[], int size2) {
    int i = 0, j = 0;

    while (i < size1 && j < size2) {
        if (arr1[i] < arr2[j]) {
            cout << arr1[i++] << " ";
        } else if (arr1[i] > arr2[j]) {
            j++;
        } else {
            i++;
            j++;
        }
    }

    while (i < size1) {
        cout << arr1[i++] << " ";
    }

    cout << endl;
}

void find_symmetric_difference(int arr1[], int size1, int arr2[], int size2) {
    int i = 0, j = 0;

    while (i < size1 && j < size2) {
        if (arr1[i] < arr2[j]) {
            cout << arr1[i++] << " ";
        } else if (arr1[i] > arr2[j]) {
            cout << arr2[j++] << " ";
        } else {
            i++;
            j++;
        }
    }

    while (i < size1) {
        cout << arr1[i++] << " ";
    }

    while (j < size2) {
        cout << arr2[j++] << " ";
    }

    cout << endl;
}

int main() {
    int arr1[] = {1, 2, 3, 4, 5};
    int size1 = sizeof(arr1) / sizeof(arr1[0]);

    int arr2[] = {3, 4, 5, 6, 7};
    int size2 = sizeof(arr2) / sizeof(arr2[0]);

    cout << "Union: ";
    find_union(arr1, size1, arr2, size2);

    cout << "Intersection: ";
    find_intersection(arr1, size1, arr2, size2);

    cout << "Difference: ";
    find_difference(arr1, size1, arr2, size2);

    cout << "Symmetric Difference: ";
    find_symmetric_difference(arr1, size1, arr2, size2);

    return 0;
}
